library(readxl)
library(pastecs)
install.packages("YieldCurve")
library(YieldCurve)
library(astsa)
library(tidyverse) #Para poder usar dplyr

setwd("C:/Users/secun/OneDrive/Documentos/6to/Series de Tiempo/Entrega final")
yields<-read_excel("datos_2004_2018.xlsx", sheet ="data_complete", col_names = TRUE)%>% 
  setNames(., c('maturity', format(as.Date(as.numeric(names(.)[-1]), 
                                     origin = '1899-12-30'), '%m/%d/%Y'))) #Columnas con formato de fecha

# colnames(yields)=as.Date(c("2004-01"))

stat.desc(yields)

loadfact2=as.matrix(1-exp(-0.0609*yields$maturity))/(0.0609*yields$maturity)
loadfact3=as.matrix((1-exp(-0.0609*yields$maturity))/(0.0609*yields$maturity))-exp(-0.0609*yields$maturity)

estimfact=c()
for (i in 2:179) {
reg=lm(as.matrix(yields[,i])~loadfact2+loadfact3)
estimfact<-rbind(estimfact, reg[["coefficients"]])
}
summary(reg)
stat.desc(estimfact)

--------------------------------------------------------

estimfactNS=c()
for (i in 2:179) {
  NS<-Nelson.Siegel(yields[,i], yields$maturity)
  estimfactNS<-rbind(estimfactNS, NS)
}
stat.desc(estimfactNS)

--------------------------------------------------------
beta_1=t(yields[120,2:179])
beta_2=t(yields[120,2:179]-yields[3,2:179])
beta_3=t(2*yields[24,2:179]-yields[3,2:179]-yields[120,2:179])

re1=as.matrix(beta_1-estimfact[,1])
re2=as.matrix(beta_2-estimfact[,2])
re3=as.matrix(beta_3-estimfact[,3])

acf2(re1)#AR1
acf2(re2)#AR1
acf2(re3)#AR1

#Pron贸stico -----------------
#pron贸stico a 1 mes (ene 2019)
for1mbeta_1=sarima.for(beta_1,1,0,0, n.ahead =1)
for1mbeta_2=sarima.for(beta_2,1,0,0, n.ahead =1)
for1mbeta_3=sarima.for(beta_3,1,0,0, n.ahead =1)

unidad=c(rep(1,120))
foryieldm=as.numeric(for1mbeta_1[["pred"]])*unidad+as.numeric(for1mbeta_2[["pred"]])*loadfact2+as.numeric(for1mbeta_3[["pred"]])*loadfact3
stat.desc(foryiedl1m)

#pron贸stico a 6 meses 
for6mbeta_1=sarima.for(beta_1,1,0,0, n.ahead =6)
for6mbeta_2=sarima.for(beta_2,1,0,0, n.ahead =6)
for6mbeta_3=sarima.for(beta_3,1,0,0, n.ahead =6)

foryield6m=matrix(0,120,6)
for (i in 1:6) {
  
foryield=as.numeric(for6mbeta_1[["pred"]])[i]*unidad+as.numeric(for6mbeta_2[["pred"]])[i]*loadfact2+as.numeric(for6mbeta_3[["pred"]])[i]*loadfact3
foryield6m[,i]=foryield
}

#pron贸stico a 12 meses 
for12mbeta_1=sarima.for(beta_1,1,0,0, n.ahead =12)
for12mbeta_2=sarima.for(beta_2,1,0,0, n.ahead =12)
for12mbeta_3=sarima.for(beta_3,1,0,0, n.ahead =12)

foryield12m=matrix(0,120,12)
for (i in 1:12) {
  
foryield=as.numeric(for12mbeta_1[["pred"]])[i]*unidad+as.numeric(for12mbeta_2[["pred"]])[i]*loadfact2+as.numeric(for12mbeta_3[["pred"]])[i]*loadfact3
foryield12m[,i]=foryield
}

# Prueba de estres --------------------------------------------------------

#3 meses
ypred=c(); ypreds=c()
e=c(); e_bm=c();

for (t in seq(132, 178, by = 3)) {
    
    for12mbeta_1=sarima.for(beta_1[1:t],1,0,0, n.ahead =3)
    
    ypred=as.numeric(for12mbeta_1[["pred"]])
    ypreds=rbind(ypreds, ypred)
    
    error<-((as.numeric(beta_1[(t+1):(t+3)])-as.numeric(for12mbeta_1[["pred"]]))^2)
    e<-rbind(e,error)
    
    #Benchmark
    benchmark=sarima.for(estimfact[,1], 1,0,0, n.ahead = 3)
    error<-((as.numeric(beta_1[(t+1):(t+3)])-as.numeric(benchmark[["pred"]]))^2)
    e_bm=rbind(e_bm,error)
}

colMeans(as.matrix(na.omit(e))) #MSE

mse<-cbind(e,e_bm)

colMeans(na.omit(mse))

#5 meses
ypred5=c(); ypreds5=c()
e5=c(); e_bm5=c();

for (t in seq(132, 178, by = 6)) {
  
  for12mbeta_1=sarima.for(beta_1[1:t],1,0,0, n.ahead =6)
  
  ypred=as.numeric(for12mbeta_1[["pred"]])
  ypreds=c(ypreds, ypred)
  
  error5<-((as.numeric(beta_1[(t+1):(t+6)])-as.numeric(for12mbeta_1[["pred"]]))^2)
  e5<-rbind(e5,error5)
  #Benchmark
  benchmark=sarima.for(estimfact[,1], 1,0,0, n.ahead = 6)
  error5<-((as.numeric(beta_1[(t+1):(t+6)])-as.numeric(benchmark[["pred"]]))^2)
  e_bm5=rbind(e_bm5,error5)
}

colMeans(as.matrix(na.omit(e5))) #MSE
mse6<-cbind(e5,e_bm5)
colMeans(na.omit(mse6))

#12 meses
ypred12=c(); ypreds12=c()
e12=c(); e_bm12=c();

for (t in seq(132, 178, by = 12)) {
  
  for12mbeta_1=sarima.for(beta_1[1:t],1,0,0, n.ahead =12)
  
  ypred=as.numeric(for12mbeta_1[["pred"]])
  ypreds=c(ypreds, ypred)
  
  error12<-((as.numeric(beta_1[(t+1):(t+12)])-as.numeric(for12mbeta_1[["pred"]]))^2)
  e12<-rbind(e12,error12)
  #Benchmark
  benchmark=sarima.for(estimfact[,1], 1,0,0, n.ahead = 12)
  error12<-((as.numeric(beta_1[(t+1):(t+12)])-as.numeric(benchmark[["pred"]]))^2)
  e_bm12=rbind(e_bm12,error12)
}

colMeans(as.matrix(na.omit(e12))) #MSE
mse12<-cbind(e12,e_bm12)
colMeans(na.omit(mse12))

