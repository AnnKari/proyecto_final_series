library(readxl)
library(pastecs)
install.packages("YieldCurve")
library(YieldCurve)

setwd("C:/Users/secun/OneDrive/Documentos/6to/Series de Tiempo/Entrega final")
yields<-read_excel("datos_2004_2018.xlsx", sheet ="data_complete", col_names = TRUE)
# colnames(yields)=as.Date(c("2004-01"))

stat.desc(yields)

loadfact2=as.matrix(1-exp(-0.0609*yields$maturity))/(0.0609*yields$maturity)
loadfact3=as.matrix((1-exp(-0.0609*yields$maturity))/(0.0609*yields$maturity))-exp(-0.0609*yields$maturity)

estimfact=c()
for (i in 2:179) {
reg=lm(as.matrix(yields[,i])~loadfact2+loadfact3)
estimfact<-rbind(estimfact, reg[["coefficients"]])
}
summary(reg)
stat.desc(estimfact)

--------------------------------------------------------

estimfactNS=c()
for (i in 2:179) {
  NS<-Nelson.Siegel(yields[,i], yields$maturity)
  estimfactNS<-rbind(estimfactNS, NS)
}
stat.desc(estimfactNS)

--------------------------------------------------------
beta_1=t(yields[120,2:179])
beta_2=t(yields[120,2:179]-yields[3,2:179])
beta_3=t(2*yields[24,2:179]-yields[3,2:179]-yields[120,2:179])

re1=as.matrix(beta_1-estimfact[,1])
re2=as.matrix(beta_2-estimfact[,2])
re3=as.matrix(beta_3-estimfact[,3])

acf2(re1)#AR1
acf2(re2)#AR1
acf2(re3)#AR1

#PronÃ³stico-----------------
forecast1()
for (t in 2:179) {
  
pronostico1=sarima.for(beta_1[(t-1),],1,0,0, newxreg =,  n.ahead =1)
forecast1=(forecast1,pronostico1[["pred"]])

